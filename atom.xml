<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="https://www.w3.org/2005/Atom">
  <title>指尖记忆</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-11-18T06:17:15.856Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>沙蒿</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>互联网项目开发流程规范</title>
    <link href="http://yoursite.com/2019/11/10/%E4%BA%92%E8%81%94%E7%BD%91%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B%E8%A7%84%E8%8C%83/"/>
    <id>http://yoursite.com/2019/11/10/%E4%BA%92%E8%81%94%E7%BD%91%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B%E8%A7%84%E8%8C%83/</id>
    <published>2019-11-10T14:31:02.000Z</published>
    <updated>2019-11-18T06:17:15.856Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><p>今天分享一下项目开发过程中规范流程的一张图，流程、文字说明都在图上。</p><p><img src="https://upload-images.jianshu.io/upload_images/7429691-9c7f5804051169ec.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="产品开发流程图.png"></p><p>如果跟你们公司开发过程中有不一样的地方，欢迎下发留言哈。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot; /&gt;


&lt;p&gt;今天分享一下项目开发过程中规范流程的一张图，流程、文字说明都在图上。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upl
      
    
    </summary>
    
    
    
      <category term="版本控制" scheme="http://yoursite.com/tags/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>git项目版本控制流程规范梳理</title>
    <link href="http://yoursite.com/2019/11/08/git%E9%A1%B9%E7%9B%AE%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E6%B5%81%E7%A8%8B%E8%A7%84%E8%8C%83%E6%A2%B3%E7%90%86/"/>
    <id>http://yoursite.com/2019/11/08/git%E9%A1%B9%E7%9B%AE%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E6%B5%81%E7%A8%8B%E8%A7%84%E8%8C%83%E6%A2%B3%E7%90%86/</id>
    <published>2019-11-08T14:22:48.000Z</published>
    <updated>2019-11-18T05:59:02.870Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h3 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h3><p><img src="https://upload-images.jianshu.io/upload_images/7429691-caa1a148645bc944.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="git版本控制"></p><h3 id="常见的分支"><a href="#常见的分支" class="headerlink" title="常见的分支"></a>常见的分支</h3><ul><li><strong>master：</strong>上线分支，每一个版本需要打上一个tag标签。每一个版本更新的内容可多可细，tag1.2.3，第一位数字1是系统更新的大版本，数字2是更新的大功能点，数字3是可以是优化、可以是修复、可以是小功能点。</li><li><strong>develop：</strong>开发分支，是当前项目的可进行测试的最新代码，每一次开发人员开发的新功能、bug、优化都需要合并同步更新到develop分支；此分支也是测试同学测试功能的分支。</li><li><strong>功能A（B/C）：</strong>功能分支，开发人员在develop拉出来进行具体功能点开发的分支。</li><li><strong>bug_fix：</strong>修复分支，线上版本出来紧急bug，拉出来的进行修复bug的分支。修复完后需要同步更新代码到develop分支。</li></ul><h3 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h3><p>一般一个项目部署的环境至少有本地环境、dev开发环境、fat环境、线上环境，只是最最基本的几个环境。</p><ul><li><strong>本地环境：</strong>不用介绍了吧这个，你的电脑虚拟机环境。【可以理解为<strong>本地的</strong>git版本】</li><li><strong>dev环境：</strong>开发自测、联调的环境【可以理解为开发对<strong>功能A（B/C）</strong>自测的环境】</li><li><strong>fat环境：</strong>测试用例测试和验证的环境【可以理解为<strong>develop分支</strong>部署，专门做上线前，测试验证、保证产品这里的测试环境】</li><li><strong>线上环境：</strong>给用户使用的正式环境【可以理解为<strong>master分支</strong>部署的环境】<br>当然，公司越大、项目越大、业务链路越复杂越长的用于开发、调试、使用的环境也就更多。可能会多一个<strong>sit环境（集成测试环境）、uat环境（预发布环境）</strong></li></ul><h3 id="开发流程"><a href="#开发流程" class="headerlink" title="开发流程"></a>开发流程</h3><p>我们就从新建一个项目开始和整个开发过程需要学习和熟练的版本控制内容。</p><hr><p>未完待续，或者您可以下方留言常见问题。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot; /&gt;


&lt;h3 id=&quot;流程图&quot;&gt;&lt;a href=&quot;#流程图&quot; class=&quot;headerlink&quot; title=&quot;流程图&quot;&gt;&lt;/a&gt;流程图&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https:/
      
    
    </summary>
    
    
    
      <category term="版本控制" scheme="http://yoursite.com/tags/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>第三方平台代小程序（公众号）业务常见错误</title>
    <link href="http://yoursite.com/2019/11/07/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%B9%B3%E5%8F%B0%E4%BB%A3%E5%B0%8F%E7%A8%8B%E5%BA%8F%EF%BC%88%E5%85%AC%E4%BC%97%E5%8F%B7%EF%BC%89%E4%B8%9A%E5%8A%A1%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/"/>
    <id>http://yoursite.com/2019/11/07/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%B9%B3%E5%8F%B0%E4%BB%A3%E5%B0%8F%E7%A8%8B%E5%BA%8F%EF%BC%88%E5%85%AC%E4%BC%97%E5%8F%B7%EF%BC%89%E4%B8%9A%E5%8A%A1%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/</id>
    <published>2019-11-07T15:38:16.000Z</published>
    <updated>2019-11-18T06:20:00.568Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><p><img src="https://upload-images.jianshu.io/upload_images/7429691-70d1c79d596ae7a4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="第三方平台接入"></p><ul><li><strong>component is not authorized by this account hint: [BZcV0a01294731]</strong></li></ul><p><strong>原因：</strong>公众号（小程序）未授权，<br><strong>解决：</strong>重新将其在授权给第三方应用就好了。</p><ul><li><strong>40001：invalid credential, access_token is invalid or not latest hint: [0947szc5!]</strong></li></ul><p><strong>原因：</strong>access_token无效或失效，<br><strong>解决：</strong>检查一下token是否正确；调用刷新token的接口，去拿到最新的token。</p><ul><li><strong>43001：require GET method hint: [yaNjnA01103955]</strong></li></ul><p><strong>原因：</strong>请求方式不出错，<br><strong>解决：</strong>查看文档接口请求方式，更换为post</p><ul><li><strong>61004：access clientip is not registered requestIP: 112.94.43.29 hint: [c7.QhA02174679!]</strong></li></ul><p><strong>原因：</strong>不在ip白名单内，<br><strong>解决：</strong>去第三方平台应用添加白名单IP地址列表</p><ul><li><strong>48001：api unauthorized hint: [qptaQa0711szb1!]</strong></li></ul><p><strong>原因：</strong>api功能未授权，<br><strong>解决：</strong>先确认是否有api权限，其次，查看你是不是把小程序的access_token拿去调用公众号的接口，或者反过来，或拿了第三方平台的token，反正就是你搞错了token。</p><ul><li><strong>47001：data format error hint: [2RnK01554870]</strong></li></ul><p><strong>原因：</strong>请求的数据格式有问题，可能是少了字段，可能是多了不必要的字段，可能是json字符串你传了json对象，</p><p><strong>解决：</strong>多看几遍微信的官方文档，检查自己的代码是否按照要求传参。</p><ul><li><strong>40066：invalid url hint: [l4ZooA0366z199!]</strong></li></ul><p><strong>原因：</strong>请求的url错了，可能是你从官网上复制的url就多了一个空格，可能你代码多了行回车，<br><strong>解决：</strong>检查自己的代码url是否正确。</p><ul><li><strong>89000：account has bound open hint: [aiYGTA0779sha1]</strong></li></ul><p><strong>原因：</strong>该公众号（小程序）已绑定了开发者账号，<br><strong>解决</strong>：登录公众号平台，查看绑定的开发者账号open_appid是多少，可以选择先调用解绑接口进行解绑，或直接在数据库插入旧的open_appid，不创建新的open_appid。</p><ul><li><strong>85001：user not exist or user cannot be searched hint: [Z4H.dA01174245]</strong></li></ul><p><strong>原因：</strong>添加小程序的体验者微信号不存在，或他关闭了被搜索到的功能，设置了权限，<br><strong>解决：</strong>输入对的微信号，或让他打开权限。</p><hr><p><strong>不要问我为什么知道这么多，全都是踩过的坑。如果您还遇到别的坑，请下方留言，来帮帮孩子</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot; /&gt;

&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/7429691-70d1c79d596ae7a4.png?ima
      
    
    </summary>
    
    
    
      <category term="微信第三方平台" scheme="http://yoursite.com/tags/%E5%BE%AE%E4%BF%A1%E7%AC%AC%E4%B8%89%E6%96%B9%E5%B9%B3%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title>小程序（公众号）授权给第三方平台流程梳理和实现</title>
    <link href="http://yoursite.com/2019/11/06/%E5%B0%8F%E7%A8%8B%E5%BA%8F%EF%BC%88%E5%85%AC%E4%BC%97%E5%8F%B7%EF%BC%89%E6%8E%88%E6%9D%83%E7%BB%99%E7%AC%AC%E4%B8%89%E6%96%B9%E5%B9%B3%E5%8F%B0%E6%B5%81%E7%A8%8B%E6%A2%B3%E7%90%86%E5%92%8C%E5%AE%9E%E7%8E%B0/"/>
    <id>http://yoursite.com/2019/11/06/%E5%B0%8F%E7%A8%8B%E5%BA%8F%EF%BC%88%E5%85%AC%E4%BC%97%E5%8F%B7%EF%BC%89%E6%8E%88%E6%9D%83%E7%BB%99%E7%AC%AC%E4%B8%89%E6%96%B9%E5%B9%B3%E5%8F%B0%E6%B5%81%E7%A8%8B%E6%A2%B3%E7%90%86%E5%92%8C%E5%AE%9E%E7%8E%B0/</id>
    <published>2019-11-06T15:39:55.000Z</published>
    <updated>2019-11-18T06:17:29.345Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><p><img src="https://upload-images.jianshu.io/upload_images/7429691-253978f27f3ebf96.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h3 id="整体流程"><a href="#整体流程" class="headerlink" title="整体流程"></a>整体流程</h3><ul><li>在第三方平台应用上点击授权</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/7429691-1f822a5a2c7d5609.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><ul><li>进入授权页面</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/7429691-44af97e1cc29aa64.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><ul><li>弹出微信授权页面，下方会显示第三方应用的基本信息</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/7429691-0762d88b8864caeb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><ul><li><strong>帐号管理员</strong>扫码，选择要授权的账号，进行授权（可自定义权限）</li></ul><p><img src="https://upload-images.jianshu.io/upload_images/7429691-5fe7791c5d8e8a1e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><ul><li>是否授权成功，回调页面显示</li></ul><h3 id="技术实现"><a href="#技术实现" class="headerlink" title="技术实现"></a>技术实现</h3><h5 id="第三方平台方获取预授权码（pre-auth-code）"><a href="#第三方平台方获取预授权码（pre-auth-code）" class="headerlink" title="第三方平台方获取预授权码（pre_auth_code）"></a>第三方平台方获取预授权码（pre_auth_code）</h5><p>接入在第三方平台应用上点击授权的时候会获取授权的预授权码（pre_auth_code），有效期为10分钟。</p><ul><li>调用接口地址</li></ul><blockquote><p>POST <a href="https://api.weixin.qq.com/cgi-bin/component/api_create_preauthcode?component_access_token=COMPONENT_ACCESS_TOKEN" target="_blank" rel="noopener">https://api.weixin.qq.com/cgi-bin/component/api_create_preauthcode?component_access_token=COMPONENT_ACCESS_TOKEN</a></p></blockquote><p>在调用此接口前，需要先获取第三方平台的令牌（也叫接口调用凭证component_access_token）</p><ul><li>参数</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;component_appid&quot;: &quot;appid_value&quot; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="后端返回参数，前端拼装请求微信url"><a href="#后端返回参数，前端拼装请求微信url" class="headerlink" title="后端返回参数，前端拼装请求微信url"></a>后端返回参数，前端拼装请求微信url</h4><p>加入授权页面的时候，前端将后端返回的数据进行组织，点击组装后的url调整按钮，就可以弹出授权窗口。（<strong>微信做了限制，只能在第三方平台在设置的回调url地址才可以访问，其他本地地址无效</strong>）<br><img src="https://upload-images.jianshu.io/upload_images/7429691-f6cf588847e9aa89.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><ul><li>后端返回的参数</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&apos;component_appid&apos; =&gt; &apos;XXX&apos;,  //第三方平台app_id</span><br><span class="line">&apos;pre_auth_code&apos;   =&gt; &apos;pre_auth_code&apos;  //  预授权码</span><br><span class="line">&apos;redirect_uri&apos;    =&gt; &apos;https://mp.weixin.qq.com/cgi-bin/componentloginpage&apos;,  //拼装的URL地址</span><br><span class="line">&apos;auth_type&apos;       =&gt;  1,  //1 2 3  要授权的帐号类型</span><br><span class="line">&apos;biz_appid&apos;       =&gt;  &apos;xxx&apos;  //指定授权唯一的小程序或公众号</span><br></pre></td></tr></table></figure><ul><li>拼装示例</li></ul><blockquote><p><a href="https://mp.weixin.qq.com/cgi-bin/componentloginpage?component_appid=xxxx&amp;pre_auth_code=xxxxx&amp;redirect_uri=xxxx&amp;auth_type=xxx" target="_blank" rel="noopener">https://mp.weixin.qq.com/cgi-bin/componentloginpage?component_appid=xxxx&amp;pre_auth_code=xxxxx&amp;redirect_uri=xxxx&amp;auth_type=xxx</a></p></blockquote><h4 id="用户授权，同意授权"><a href="#用户授权，同意授权" class="headerlink" title="用户授权，同意授权"></a>用户授权，同意授权</h4><p>用户进入第三方平台授权页后，需要确认并同意将自己的公众号或小程序授权给第三方平台方，完成授权流程。此时在微信上，公众号已经授权给第三方平台了，在公众号平台上可以看到授权平台。然后第三方平台需要拿到公众号的基本信息、授权信息和执行权限，需要回调地址进行处理、保存授权信息（<strong>access_token和refresh_token</strong>）。</p><h4 id="回调地址处理授权信息"><a href="#回调地址处理授权信息" class="headerlink" title="回调地址处理授权信息"></a>回调地址处理授权信息</h4><p>这个回调地址是在第三方平台上设置的，拿到授权码（auth_code）后，使用授权码换取公众号或小程序的接口调用凭据和授权信息。</p><ul><li>调用接口为：</li></ul><blockquote><p>POST <a href="https://api.weixin.qq.com/cgi-bin/component/api_query_auth?component_access_token=COMPONENT_ACCESS_TOKEN" target="_blank" rel="noopener">https://api.weixin.qq.com/cgi-bin/component/api_query_auth?component_access_token=COMPONENT_ACCESS_TOKEN</a></p></blockquote><ul><li>参数</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;component_appid&quot;:&quot;appid_value&quot; ,  //第三方平台 appid</span><br><span class="line">  &quot;authorization_code&quot;: &quot;auth_code_value&quot;  //授权码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回是仅仅是授权信息（authorization_info）。authorizer_appid，authorizer_access_token，expires_in，authorizer_refresh_token以及权限id集这些数据。稍未获得公众号一些基本帐号信息（公众号名称、头像等等），这时候需要去获取授权方的帐号基本信息。</p><ul><li>调用接口为：</li></ul><blockquote><p>POST <a href="https://api.weixin.qq.com/cgi-bin/component/api_get_authorizer_info?component_access_token==COMPONENT_ACCESS_TOKEN" target="_blank" rel="noopener">https://api.weixin.qq.com/cgi-bin/component/api_get_authorizer_info?component_access_token==COMPONENT_ACCESS_TOKEN</a></p></blockquote><ul><li>参数</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;component_appid&quot;:&quot;appid_value&quot; ,  //第三方平台 appid</span><br><span class="line">  &quot;authorizer_appid&quot;: &quot;auth_code_value&quot;  //授权方 appid</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>拿到信息后你就可以保存到数据库里了，整个微信公众号授权的流程就结束了，后续根据各自业务对授权信息和帐号信息进行其他业务处理就ok。</p><h3 id="实例代码"><a href="#实例代码" class="headerlink" title="实例代码"></a>实例代码</h3><blockquote><p><strong>$this-&gt;request()-&gt;getParams()</strong> 是封装好的获取参数的方法，可自行替代<br><strong>getComAccessToken()</strong> 是封装好的获取第三方接口调用凭证的方法，可自行替代<br><strong>httpsCurl()</strong> 是封装好的请求微信的方法，可自行替代<br><strong>WX_APP_ID</strong> 是全局参数第三方平台的app_id</p></blockquote><p>PS:这里的代码仅仅只是把整个业务流程写在一起，方便阅读，实际场景中代码当然不会这样子写</p><p>获取预授权码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">     * Created by 沙蒿.</span><br><span class="line">     * @desc 获取预授权码pre_auth_code，有效期10分钟</span><br><span class="line">     */</span><br><span class="line">    public function getWxPreAuthCode()</span><br><span class="line">    &#123;</span><br><span class="line">        $authType = $this-&gt;request()-&gt;getParams(&apos;auth_type&apos;) ?? 1;</span><br><span class="line">        //1公众号授权，2小程序授权</span><br><span class="line">        if (empty($authType) || !in_array($authType, [1, 2])) &#123;</span><br><span class="line">            return $this-&gt;error(100201);</span><br><span class="line">        &#125;</span><br><span class="line">        //获取第三方平台接口调用凭证</span><br><span class="line">        $comAccToken = $this-&gt;getComAccessToken();</span><br><span class="line">        //请求微信服务器获取预授权码url地址</span><br><span class="line">        $url         = &apos;https://api.weixin.qq.com/cgi-bin/component/api_create_preauthcode?component_access_token=&apos; . $comAccToken;</span><br><span class="line">        // 获取授权请求二维码url地址</span><br><span class="line">        $reqUrl      = &apos;https://mp.weixin.qq.com/cgi-bin/componentloginpage&apos;;</span><br><span class="line">        $preAuthCode = CommonService::getInstance()-&gt;httpsCurl($url, &apos;post&apos;, &apos;json&apos;, [</span><br><span class="line">            &apos;component_appid&apos; =&gt; WX_APP_ID</span><br><span class="line">        ]);</span><br><span class="line">        //组装格式，返回</span><br><span class="line">        $result = [</span><br><span class="line">            &apos;component_appid&apos; =&gt; WX_APP_ID,</span><br><span class="line">            &apos;pre_auth_code&apos;   =&gt; $preAuthCode[&apos;pre_auth_code&apos;],</span><br><span class="line">            &apos;redirect_uri&apos;    =&gt; $reqUrl,</span><br><span class="line">            &apos;auth_type&apos;       =&gt; $authType,</span><br><span class="line">        ];</span><br><span class="line">        if (!empty($bizAppId)) &#123;</span><br><span class="line">            $result[&apos;biz_appid&apos;] = $bizAppId;</span><br><span class="line">        &#125;</span><br><span class="line">        return $result;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>回调地址处理授权信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">     * Created by 沙蒿.</span><br><span class="line">     * @desc 微信授权</span><br><span class="line">     * 授权后回调URI，得到授权码（authorization_code）和过期时间10分钟,使用授权码换取公众号或小程序的接口调用凭据和授权信息</span><br><span class="line">     */</span><br><span class="line">    public function wxOAuth()</span><br><span class="line">    &#123;</span><br><span class="line">        //接收授权码auth_code</span><br><span class="line">        $code = $this-&gt;request()-&gt;getParams(&apos;auth_code&apos;);</span><br><span class="line">        //校验参数</span><br><span class="line">        if (empty($code)) &#123;</span><br><span class="line">            return $this-&gt;error(100202);</span><br><span class="line">        &#125;</span><br><span class="line">        //获取第三方平台的接口调用凭证</span><br><span class="line">        $comAccToken = $this-&gt;getComAccessToken();</span><br><span class="line">        //使用授权码换取公众号或小程序的接口调用凭据和授权信息</span><br><span class="line">        $queryAuthUrl = &apos;https://api.weixin.qq.com/cgi-bin/component/api_query_auth?component_access_token=&apos; . $comAccToken;</span><br><span class="line">        $authInfo     = CommonService::getInstance()-&gt;httpsCurl($queryAuthUrl, &apos;post&apos;, &apos;json&apos;, [</span><br><span class="line">            &apos;component_appid&apos;    =&gt; WX_APP_ID,</span><br><span class="line">            &apos;authorization_code&apos; =&gt; $code</span><br><span class="line">        ]);</span><br><span class="line">        //获取授权信息</span><br><span class="line">        $authInfo        = $authInfo[&apos;authorization_info&apos;];</span><br><span class="line">        $authorizerAppId = $authInfo[&apos;authorizer_appid&apos;]; //授权方appid</span><br><span class="line">        //获取授权方的帐号基本信息</span><br><span class="line">        $authorizerInfoUrl = &apos;https://api.weixin.qq.com/cgi-bin/component/api_get_authorizer_info?component_access_token=&apos; . $comAccToken;</span><br><span class="line">        $appInfo           = CommonService::getInstance()-&gt;httpsCurl($authorizerInfoUrl, &apos;post&apos;, &apos;json&apos;, [</span><br><span class="line">            &apos;component_appid&apos;  =&gt; WX_APP_ID,</span><br><span class="line">            &apos;authorizer_appid&apos; =&gt; $authorizerAppId</span><br><span class="line">        ]);</span><br><span class="line">        //保存授权信息和帐号信息</span><br><span class="line">        $this-&gt;saveWxAuth($authInfo, $appInfo);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot; /&gt;

&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/7429691-253978f27f3ebf96.png?ima
      
    
    </summary>
    
    
    
      <category term="微信第三方平台" scheme="http://yoursite.com/tags/%E5%BE%AE%E4%BF%A1%E7%AC%AC%E4%B8%89%E6%96%B9%E5%B9%B3%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title>第三方平台代替小程序实现登录功能流程梳理和实现</title>
    <link href="http://yoursite.com/2019/11/06/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%B9%B3%E5%8F%B0%E4%BB%A3%E6%9B%BF%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%BD%95%E5%8A%9F%E8%83%BD%E6%B5%81%E7%A8%8B%E6%A2%B3%E7%90%86%E5%92%8C%E5%AE%9E%E7%8E%B0/"/>
    <id>http://yoursite.com/2019/11/06/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%B9%B3%E5%8F%B0%E4%BB%A3%E6%9B%BF%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%BD%95%E5%8A%9F%E8%83%BD%E6%B5%81%E7%A8%8B%E6%A2%B3%E7%90%86%E5%92%8C%E5%AE%9E%E7%8E%B0/</id>
    <published>2019-11-06T15:39:16.000Z</published>
    <updated>2019-11-18T06:17:58.992Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><p><img src="https://upload-images.jianshu.io/upload_images/7429691-70d1c79d596ae7a4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="第三方平台接入"></p><h3 id="整体流程"><a href="#整体流程" class="headerlink" title="整体流程"></a>整体流程</h3><p><a href="[https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/login.html](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/login.html)">微信官方文档</a><br><img src="https://upload-images.jianshu.io/upload_images/7429691-06c4cc6a442dc1f8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信小程序登录流程时序图"></p><h3 id="详细说明"><a href="#详细说明" class="headerlink" title="详细说明"></a>详细说明</h3><p>现在用户初次进入小程序中先需要用户进行授权操作，其实就是“登录”，然后拿到“用户信息”的操作。上面wx.login()只是拿到了登录code，并没有获取用户信息。一般小程序登录接口会给code和用户加密敏感信息相关字段。</p><ul><li>小程序调用的接口：<a href="https://developers.weixin.qq.com/miniprogram/dev/api/open-api/login/wx.login.html" target="_blank" rel="noopener">登录</a> <a href="https://developers.weixin.qq.com/miniprogram/dev/api/open-api/user-info/wx.getUserInfo.html" target="_blank" rel="noopener">用户授权</a></li><li>后台登录参数</li></ul><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>appId</td><td>string</td><td>小程序的app_id</td></tr><tr><td>code</td><td>string</td><td>登录code</td></tr><tr><td>rawData</td><td>string</td><td>不包括敏感信息的原始数据字符串，用于计算签名</td></tr><tr><td>signature</td><td>string</td><td>使用 sha1( rawData + sessionkey ) 得到字符串，用于校验用户信息，详见 <a href="https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/signature.html" target="_blank" rel="noopener">用户数据的签名验证和加解密</a></td></tr><tr><td>encryptedData</td><td>string</td><td>包括敏感数据在内的完整用户信息的加密数据，详见 <a href="https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/signature.html#%E5%8A%A0%E5%AF%86%E6%95%B0%E6%8D%AE%E8%A7%A3%E5%AF%86%E7%AE%97%E6%B3%95" target="_blank" rel="noopener">用户数据的签名验证和加解密</a></td></tr><tr><td>iv</td><td>string</td><td>加密算法的初始向量，详见 <a href="https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/signature.html#%E5%8A%A0%E5%AF%86%E6%95%B0%E6%8D%AE%E8%A7%A3%E5%AF%86%E7%AE%97%E6%B3%95" target="_blank" rel="noopener">用户数据的签名验证和加解密</a></td></tr></tbody></table><hr><p>接收到参数后，从时序图可以知道。要拿code调用微信接口获取session_key和openid这些加密信息，然后对其进行解密，解密就用官方的<a href="https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/signature.html" target="_blank" rel="noopener">解密sdk</a>就好，最好保存小程序粉丝信息，返回自定义登录token给前端，下次前端请求接口的时候需要在请求头把自定义的tokne给过来验证。</p><ul><li><a href="https://developers.weixin.qq.com/doc/oplatform/Third-party_Platforms/Mini_Programs/WeChat_login.html" target="_blank" rel="noopener">小程序登录</a>调用地址</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET https://api.weixin.qq.com/sns/component/jscode2session?appid=APPID&amp;js_code=JSCODE&amp;grant_type=authorization_code&amp;component_appid=COMPONENT_APPID&amp;component_access_token=COMPONENT_ACCESS_TOKEN</span><br></pre></td></tr></table></figure><ul><li>参数</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&apos;appid&apos;                  =&gt; appid,  //小程序appid</span><br><span class="line">&apos;js_code&apos;                =&gt; code,   //登录code</span><br><span class="line">&apos;grant_type&apos;             =&gt; &apos;authorization_code&apos;,  //固定值</span><br><span class="line">&apos;component_appid&apos;        =&gt; WX_APP_ID,   //第三方平台 appid</span><br><span class="line">&apos;component_access_token&apos; =&gt; $comAccToke  //第三方平台接口凭证</span><br></pre></td></tr></table></figure><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><blockquote><p><strong>$this-&gt;request()-&gt;getParams()</strong> 是封装好的获取参数的方法，可自行替代<br><strong>getComAccessToken()</strong> 是封装好的获取第三方接口调用凭证的方法，可自行替代<br><strong>httpsCurl()</strong> 是封装好的请求微信的方法，可自行替代<br><strong>WX_APP_ID</strong> 是全局参数第三方平台的app_id</p></blockquote><p>PS:这里的代码仅仅只是把整个业务流程写在一起，方便阅读，实际场景中代码当然不会这样子写</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">     * Created by 沙蒿.</span><br><span class="line">     * @desc 小程序用户授权登录</span><br><span class="line">     */</span><br><span class="line">    public function wxLogin()</span><br><span class="line">    &#123;</span><br><span class="line">        //接收参数</span><br><span class="line">        $request                 = $this-&gt;request()-&gt;getParams();</span><br><span class="line">        $filter                  = [];</span><br><span class="line">        $filter[&apos;appid&apos;]         = $request[&apos;appid&apos;];</span><br><span class="line">        $filter[&apos;code&apos;]          = $request[&apos;code&apos;];</span><br><span class="line">        $filter[&apos;userInfo&apos;]      = $request[&apos;userInfo&apos;];</span><br><span class="line">        $filter[&apos;rawData&apos;]       = $request[&apos;rawData&apos;];</span><br><span class="line">        $filter[&apos;signature&apos;]     = $request[&apos;signature&apos;];</span><br><span class="line">        $filter[&apos;encryptedData&apos;] = $request[&apos;encryptedData&apos;];</span><br><span class="line">        $filter[&apos;iv&apos;]            = $request[&apos;iv&apos;];</span><br><span class="line">        //校验参数</span><br><span class="line">        $check = $this-&gt;checkAppLogin($filter);</span><br><span class="line">        //获取第三方接口调用凭证（令牌）</span><br><span class="line">        $comAccToken = $this-&gt;getComAccessToken();</span><br><span class="line">        //调用微信服务器接口，获，openId + sessionKey + （unionId）</span><br><span class="line">        $url       = &apos;https://api.weixin.qq.com/sns/component/jscode2session&apos;;</span><br><span class="line">        $loginInfo = CommonService::getInstance()-&gt;httpsCurl($url, &apos;get&apos;, &apos;json&apos;, [</span><br><span class="line">            &apos;appid&apos;                  =&gt; $filter[&apos;appid&apos;],</span><br><span class="line">            &apos;js_code&apos;                =&gt; $filter[&apos;code&apos;],</span><br><span class="line">            &apos;grant_type&apos;             =&gt; &apos;authorization_code&apos;,</span><br><span class="line">            &apos;component_appid&apos;        =&gt; WX_APP_ID,</span><br><span class="line">            &apos;component_access_token&apos; =&gt; $comAccToken</span><br><span class="line">        ]);</span><br><span class="line">        //sha1散列算法加密，验证signature</span><br><span class="line">        $signature = sha1($filter[&apos;rawData&apos;] . $loginInfo[&apos;session_key&apos;]);</span><br><span class="line">        //加密数据解密算法，解密获取用户敏感信息</span><br><span class="line">        include_once ROOT_PATH . &apos;wxBizDataCrypt.php&apos;;</span><br><span class="line">        $decrypt = new \WXBizDataCrypt($filter[&apos;appid&apos;], $loginInfo[&apos;session_key&apos;]);</span><br><span class="line">        $errCode = $decrypt-&gt;decryptData($filter[&apos;encryptedData&apos;], $filter[&apos;iv&apos;], $userInfo);</span><br><span class="line">        //保存用户粉丝到用户服务，并调用帐号服务获取token</span><br><span class="line">        return $this-&gt;saveMiniAppFans($userInfo, $filter[&apos;appid&apos;], $loginInfo[&apos;session_key&apos;]);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot; /&gt;

&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/7429691-70d1c79d596ae7a4.png?ima
      
    
    </summary>
    
    
    
      <category term="微信第三方平台" scheme="http://yoursite.com/tags/%E5%BE%AE%E4%BF%A1%E7%AC%AC%E4%B8%89%E6%96%B9%E5%B9%B3%E5%8F%B0/"/>
    
  </entry>
  
</feed>
